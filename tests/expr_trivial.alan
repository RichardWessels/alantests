source expr_trivial
begin

    boolean a, b, c, d, e;
    integer i, j, k, l, m;

    put "==============================\n";
    put "|     Variable Assignment    |\n";
    put "==============================\n";

    i := 10;
    j := 7;
    k := 5;
    l := 2;
    m := 0;
    a := true;
    b := true;
    c := false;
    d := false;
    e := true;

    put "==============================\n";
    put "|       Variable Output       |\n";
    put "==============================\n";
    put "------------------------------\n";
    put i. " ". j. " ". k. " ". l. " ". m. "\n";
    put a. " ". b. " ". c. " ". d. " ". e. "\n";
    put "------------------------------\n";
    put "==============================\n";
    put "|    Variable Arithmetic     |\n";
    put "==============================\n";
    put "------------------------------\n";
    put "Addition: [22]\n";
    put "------------------------------\n";
    put (i + j) + k . "\n";
    put "------------------------------\n";
    put "Multiplication: [70]\n";
    put "------------------------------\n";
    put (l * k) * j . "\n";
    put "------------------------------\n";
    put "Division: [1]\n";
    put "------------------------------\n";
    put (i / k) / l . "\n";
    put "------------------------------\n";
    put "Remainder: [0] & [3]\n";
    put "------------------------------\n";
    put i rem k . "\t" . i rem j . "\n";
    put "------------------------------\n";
    put "Subtraction: [-2] & [8]\n";
    put "------------------------------\n";
    put k - j . "\t" . i - l . "\n";
    put "------------------------------\n";
    put "Negation [-7] & [5]\n";
    put "------------------------------\n";
    put -j . "\t" . -(-k) ."\n";
    put "------------------------------\n";
    put "==============================\n";
    put "|      Variable Boolean      |\n";
    put "==============================\n";
    put "------------------------------\n";
    put "Boolean True, False: [T] & [F]\n";
    put "------------------------------\n";
    put a . "\t" . c . "\n";
    put "------------------------------\n";
    put "Boolean And: [F] & [T] & [F]\n";
    put "------------------------------\n";
    put a and c . "\t" . b and a . "\t" . c and d . "\n";
    put "------------------------------\n";
    put "Boolean Or: [T] & [F] & [T]\n";
    put "------------------------------\n";
    put b or d . "\t" . c or d . "\t" . d or e . "\n";
    put "------------------------------\n";
    put "Boolean Not: [T] & [F] & [T]\n";
    put "------------------------------\n";
    put  not c . "\n" . not e . "\n" . not (d and a) . "\n";
    put "------------------------------\n";
    put "Boolean Equals: [T] & [F]\n";
    put "------------------------------\n";
    put i = i . "\n" . j = l . "\n";
    put "------------------------------\n";
    put "Boolean GrEqual: [T] & [F] & [T]\n";
    put "------------------------------\n";
    put i >= j . "\n" . l >= k . "\n" . j >= j . "\n";
    put "------------------------------\n";
    put "Boolean Greater: [F] & [T] & [F]\n";
    put "------------------------------\n";
    put k > j . "\n" . l > m . "\n" . l > l . "\n";
    put "------------------------------\n";
    put "Boolean LessEqual: [T] & [F] & [T]\n";
    put "------------------------------\n";
    put j <= i . "\n" . i <= j . "\n" . l <= k . "\n";
    put "------------------------------\n";
    put "Boolean Less: [F] & [T] & [F]\n";
    put "------------------------------\n";
    put k < l . "\n" . l < k . "\n" . j < j . "\n";
    put "------------------------------\n";
    put "Boolean Not Equal: [T] & [F] & [T]\n";
    put "------------------------------\n";
    put i <> j . "\n" . k <> k . "\n" . l <> m . "\n";
    put "------------------------------\n"
end
